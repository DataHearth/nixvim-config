{
  "nix.control.ifelse": {
    "prefix": "if",
    "body": ["if $1 then", "  $2", "else$0"],
    "description": "If-else control structure"
  },
  "nix.control.letin": {
    "prefix": "let",
    "body": ["let", "  $1", "in $0"],
    "description": "Let-in binding block"
  },
  "nix.hash.empty": {
    "prefix": "hash",
    "body": "\"${1:sha256-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=}\";",
    "description": "Empty SHA256 hash template"
  },
  "nix.fetch.git": {
    "prefix": "fetchFrom",
    "body": [
      "fetchFrom${1|GitHub,GitLab,Gitea,Gitiles,BitBucket,Savannah,RepoOrCz,SourceHut|} {",
      "  owner = \"$2\";",
      "  repo = \"$3\";",
      "  rev = \"${4:v\\${version\\}}\";",
      "  hash = \"${5:sha256-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=}\";",
      "};"
    ],
    "description": "Git repository fetcher for various platforms"
  },
  "nix.fetch.url": {
    "prefix": "fetchurl",
    "body": [
      "fetchurl {",
      "  url = \"$1\";",
      "  hash = \"${2:sha256-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=}\";",
      "};"
    ],
    "description": "URL fetcher with hash verification"
  },
  "nix.package.args": {
    "prefix": "pkg",
    "body": ["{ lib", ", ${1:stdenv}", ", $2", "}:", "", "$0"],
    "description": "Package argument set with lib"
  },
  "nix.derivation.standard": {
    "prefix": "mkd",
    "body": [
      "stdenv.mkDerivation (finalAttrs: {",
      "  pname = \"$1\";",
      "  version = \"$2\";",
      "",
      "  src = $3",
      "",
      "  nativeBuildInputs = [",
      "    $4",
      "  ];",
      "  buildInputs = [",
      "    $0",
      "  ];",
      "",
      "  meta = {",
      "    description = \"$5\";",
      "    homepage = \"$6\";",
      "    license = lib.licenses.$7;",
      "    maintainers = with lib.maintainers; [ $8 ];",
      "  };",
      "})"
    ],
    "description": "Standard derivation template"
  },
  "nix.meta.standard": {
    "prefix": "meta",
    "body": [
      "meta = {",
      "  description = \"$1\";",
      "  homepage = \"$2\";",
      "  license = lib.licenses.$3;",
      "  maintainers = with lib.maintainers; [ $0 ];",
      "};"
    ],
    "description": "Standard meta attributes template"
  }
}
